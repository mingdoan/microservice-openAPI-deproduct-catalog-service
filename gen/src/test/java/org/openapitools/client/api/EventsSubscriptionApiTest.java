/*
 * Product Catalog Management
 * ## TMF API Reference: TMF620 - Product Catalog Management  ### Release : 20.5 - March 2021  Product Catalog API is one of Catalog Management API Family. Product Catalog API goal is to provide a catalog of products.   ### Operations Product Catalog API performs the following operations on the resources : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity - Manage notification of events
 *
 * The version of the OpenAPI document: 4.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.EventSubscription;
import org.openapitools.client.model.EventSubscriptionInput;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventsSubscriptionApi
 */
@Ignore
public class EventsSubscriptionApiTest {

    private final EventsSubscriptionApi api = new EventsSubscriptionApi();

    
    /**
     * Register a listener
     *
     * Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void registerListenerTest() throws ApiException {
        EventSubscriptionInput data = null;
        EventSubscription response = api.registerListener(data);

        // TODO: test validations
    }
    
    /**
     * Unregister a listener
     *
     * Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void unregisterListenerTest() throws ApiException {
        String id = null;
        api.unregisterListener(id);

        // TODO: test validations
    }
    
}
