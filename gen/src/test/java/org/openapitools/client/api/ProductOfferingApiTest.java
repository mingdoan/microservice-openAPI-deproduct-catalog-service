/*
 * Product Catalog Management
 * ## TMF API Reference: TMF620 - Product Catalog Management  ### Release : 20.5 - March 2021  Product Catalog API is one of Catalog Management API Family. Product Catalog API goal is to provide a catalog of products.   ### Operations Product Catalog API performs the following operations on the resources : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity - Manage notification of events
 *
 * The version of the OpenAPI document: 4.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.ProductOffering;
import org.openapitools.client.model.ProductOfferingCreate;
import org.openapitools.client.model.ProductOfferingUpdate;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductOfferingApi
 */
@Ignore
public class ProductOfferingApiTest {

    private final ProductOfferingApi api = new ProductOfferingApi();

    
    /**
     * Creates a ProductOffering
     *
     * This operation creates a ProductOffering entity.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createProductOfferingTest() throws ApiException {
        ProductOfferingCreate productOffering = null;
        ProductOffering response = api.createProductOffering(productOffering);

        // TODO: test validations
    }
    
    /**
     * Deletes a ProductOffering
     *
     * This operation deletes a ProductOffering entity.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteProductOfferingTest() throws ApiException {
        String id = null;
        api.deleteProductOffering(id);

        // TODO: test validations
    }
    
    /**
     * List or find ProductOffering objects
     *
     * This operation list or find ProductOffering entities
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listProductOfferingTest() throws ApiException {
        String fields = null;
        Integer offset = null;
        Integer limit = null;
        List<ProductOffering> response = api.listProductOffering(fields, offset, limit);

        // TODO: test validations
    }
    
    /**
     * Updates partially a ProductOffering
     *
     * This operation updates partially a ProductOffering entity.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchProductOfferingTest() throws ApiException {
        String id = null;
        ProductOfferingUpdate productOffering = null;
        ProductOffering response = api.patchProductOffering(id, productOffering);

        // TODO: test validations
    }
    
    /**
     * Retrieves a ProductOffering by ID
     *
     * This operation retrieves a ProductOffering entity. Attribute selection is enabled for all first level attributes.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveProductOfferingTest() throws ApiException {
        String id = null;
        String fields = null;
        ProductOffering response = api.retrieveProductOffering(id, fields);

        // TODO: test validations
    }
    
}
