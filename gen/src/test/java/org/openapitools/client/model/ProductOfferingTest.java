/*
 * Product Catalog Management
 * ## TMF API Reference: TMF620 - Product Catalog Management  ### Release : 20.5 - March 2021  Product Catalog API is one of Catalog Management API Family. Product Catalog API goal is to provide a catalog of products.   ### Operations Product Catalog API performs the following operations on the resources : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity - Manage notification of events
 *
 * The version of the OpenAPI document: 4.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AgreementRef;
import org.openapitools.client.model.AttachmentRefOrValue;
import org.openapitools.client.model.BundledProductOffering;
import org.openapitools.client.model.CategoryRef;
import org.openapitools.client.model.ChannelRef;
import org.openapitools.client.model.MarketSegmentRef;
import org.openapitools.client.model.PlaceRef;
import org.openapitools.client.model.ProductOfferingPriceRefOrValue;
import org.openapitools.client.model.ProductOfferingRelationship;
import org.openapitools.client.model.ProductOfferingTerm;
import org.openapitools.client.model.ProductSpecificationCharacteristicValueUse;
import org.openapitools.client.model.ProductSpecificationRef;
import org.openapitools.client.model.ResourceCandidateRef;
import org.openapitools.client.model.SLARef;
import org.openapitools.client.model.ServiceCandidateRef;
import org.openapitools.client.model.TimePeriod;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ProductOffering
 */
public class ProductOfferingTest {
    private final ProductOffering model = new ProductOffering();

    /**
     * Model tests for ProductOffering
     */
    @Test
    public void testProductOffering() {
        // TODO: test ProductOffering
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'href'
     */
    @Test
    public void hrefTest() {
        // TODO: test href
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'isBundle'
     */
    @Test
    public void isBundleTest() {
        // TODO: test isBundle
    }

    /**
     * Test the property 'isSellable'
     */
    @Test
    public void isSellableTest() {
        // TODO: test isSellable
    }

    /**
     * Test the property 'lastUpdate'
     */
    @Test
    public void lastUpdateTest() {
        // TODO: test lastUpdate
    }

    /**
     * Test the property 'lifecycleStatus'
     */
    @Test
    public void lifecycleStatusTest() {
        // TODO: test lifecycleStatus
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'statusReason'
     */
    @Test
    public void statusReasonTest() {
        // TODO: test statusReason
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'agreement'
     */
    @Test
    public void agreementTest() {
        // TODO: test agreement
    }

    /**
     * Test the property 'attachment'
     */
    @Test
    public void attachmentTest() {
        // TODO: test attachment
    }

    /**
     * Test the property 'bundledProductOffering'
     */
    @Test
    public void bundledProductOfferingTest() {
        // TODO: test bundledProductOffering
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'channel'
     */
    @Test
    public void channelTest() {
        // TODO: test channel
    }

    /**
     * Test the property 'marketSegment'
     */
    @Test
    public void marketSegmentTest() {
        // TODO: test marketSegment
    }

    /**
     * Test the property 'place'
     */
    @Test
    public void placeTest() {
        // TODO: test place
    }

    /**
     * Test the property 'prodSpecCharValueUse'
     */
    @Test
    public void prodSpecCharValueUseTest() {
        // TODO: test prodSpecCharValueUse
    }

    /**
     * Test the property 'productOfferingPrice'
     */
    @Test
    public void productOfferingPriceTest() {
        // TODO: test productOfferingPrice
    }

    /**
     * Test the property 'productOfferingRelationship'
     */
    @Test
    public void productOfferingRelationshipTest() {
        // TODO: test productOfferingRelationship
    }

    /**
     * Test the property 'productOfferingTerm'
     */
    @Test
    public void productOfferingTermTest() {
        // TODO: test productOfferingTerm
    }

    /**
     * Test the property 'productSpecification'
     */
    @Test
    public void productSpecificationTest() {
        // TODO: test productSpecification
    }

    /**
     * Test the property 'resourceCandidate'
     */
    @Test
    public void resourceCandidateTest() {
        // TODO: test resourceCandidate
    }

    /**
     * Test the property 'serviceCandidate'
     */
    @Test
    public void serviceCandidateTest() {
        // TODO: test serviceCandidate
    }

    /**
     * Test the property 'serviceLevelAgreement'
     */
    @Test
    public void serviceLevelAgreementTest() {
        // TODO: test serviceLevelAgreement
    }

    /**
     * Test the property 'validFor'
     */
    @Test
    public void validForTest() {
        // TODO: test validFor
    }

    /**
     * Test the property 'atBaseType'
     */
    @Test
    public void atBaseTypeTest() {
        // TODO: test atBaseType
    }

    /**
     * Test the property 'atSchemaLocation'
     */
    @Test
    public void atSchemaLocationTest() {
        // TODO: test atSchemaLocation
    }

    /**
     * Test the property 'atType'
     */
    @Test
    public void atTypeTest() {
        // TODO: test atType
    }

}
