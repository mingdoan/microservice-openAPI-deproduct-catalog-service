/*
 * Product Catalog Management
 * ## TMF API Reference: TMF620 - Product Catalog Management  ### Release : 20.5 - March 2021  Product Catalog API is one of Catalog Management API Family. Product Catalog API goal is to provide a catalog of products.   ### Operations Product Catalog API performs the following operations on the resources : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity - Manage notification of events
 *
 * The version of the OpenAPI document: 4.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;
import org.openapitools.client.model.Duration;
import org.openapitools.client.model.TimePeriod;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ProductOfferingTerm
 */
public class ProductOfferingTermTest {
    private final ProductOfferingTerm model = new ProductOfferingTerm();

    /**
     * Model tests for ProductOfferingTerm
     */
    @Test
    public void testProductOfferingTerm() {
        // TODO: test ProductOfferingTerm
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'duration'
     */
    @Test
    public void durationTest() {
        // TODO: test duration
    }

    /**
     * Test the property 'validFor'
     */
    @Test
    public void validForTest() {
        // TODO: test validFor
    }

    /**
     * Test the property 'atBaseType'
     */
    @Test
    public void atBaseTypeTest() {
        // TODO: test atBaseType
    }

    /**
     * Test the property 'atSchemaLocation'
     */
    @Test
    public void atSchemaLocationTest() {
        // TODO: test atSchemaLocation
    }

    /**
     * Test the property 'atType'
     */
    @Test
    public void atTypeTest() {
        // TODO: test atType
    }

}
