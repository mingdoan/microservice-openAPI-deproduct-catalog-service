/*
 * Product Catalog Management
 * ## TMF API Reference: TMF620 - Product Catalog Management  ### Release : 20.5 - March 2021  Product Catalog API is one of Catalog Management API Family. Product Catalog API goal is to provide a catalog of products.   ### Operations Product Catalog API performs the following operations on the resources : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity - Manage notification of events
 *
 * The version of the OpenAPI document: 4.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ConstraintRef;
import org.openapitools.client.model.POPAlteration;
import org.openapitools.client.model.ProductPriceValue;
import org.openapitools.client.model.Quantity;
import org.openapitools.client.model.TimePeriod;
import org.threeten.bp.OffsetDateTime;

/**
 * This is representing a product offering price (charge) based on both the basic cost to develop and produce products and the enterprises policy on revenue targets. This price may be further revised through discounting (a Product Offering Price that reflects an alteration).
 */
@ApiModel(description = "This is representing a product offering price (charge) based on both the basic cost to develop and produce products and the enterprises policy on revenue targets. This price may be further revised through discounting (a Product Offering Price that reflects an alteration).")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-04T02:31:04.425344+07:00[Asia/Ho_Chi_Minh]")
public class POPCharge {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_HREF = "href";
  @SerializedName(SERIALIZED_NAME_HREF)
  private URI href;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_LAST_UPDATE = "lastUpdate";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE)
  private OffsetDateTime lastUpdate;

  public static final String SERIALIZED_NAME_LIFECYCLE_STATUS = "lifecycleStatus";
  @SerializedName(SERIALIZED_NAME_LIFECYCLE_STATUS)
  private String lifecycleStatus;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRICE_TYPE = "priceType";
  @SerializedName(SERIALIZED_NAME_PRICE_TYPE)
  private String priceType;

  public static final String SERIALIZED_NAME_RECURRING_CHARGE_PERIOD = "recurringChargePeriod";
  @SerializedName(SERIALIZED_NAME_RECURRING_CHARGE_PERIOD)
  private String recurringChargePeriod;

  public static final String SERIALIZED_NAME_RECURRING_CHARGE_PERIOD_LENGTH = "recurringChargePeriodLength";
  @SerializedName(SERIALIZED_NAME_RECURRING_CHARGE_PERIOD_LENGTH)
  private Integer recurringChargePeriodLength;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_CONSTRAINT = "constraint";
  @SerializedName(SERIALIZED_NAME_CONSTRAINT)
  private List<ConstraintRef> constraint = null;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private ProductPriceValue price;

  public static final String SERIALIZED_NAME_PRICE_ALTERATION = "priceAlteration";
  @SerializedName(SERIALIZED_NAME_PRICE_ALTERATION)
  private List<POPAlteration> priceAlteration = null;

  public static final String SERIALIZED_NAME_UNIT_OF_MEASURE = "unitOfMeasure";
  @SerializedName(SERIALIZED_NAME_UNIT_OF_MEASURE)
  private Quantity unitOfMeasure;

  public static final String SERIALIZED_NAME_VALID_FOR = "validFor";
  @SerializedName(SERIALIZED_NAME_VALID_FOR)
  private TimePeriod validFor;

  public static final String SERIALIZED_NAME_AT_BASE_TYPE = "@baseType";
  @SerializedName(SERIALIZED_NAME_AT_BASE_TYPE)
  private String atBaseType;

  public static final String SERIALIZED_NAME_AT_SCHEMA_LOCATION = "@schemaLocation";
  @SerializedName(SERIALIZED_NAME_AT_SCHEMA_LOCATION)
  private URI atSchemaLocation;

  public static final String SERIALIZED_NAME_AT_TYPE = "@type";
  @SerializedName(SERIALIZED_NAME_AT_TYPE)
  private String atType;


  public POPCharge id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * unique identifier
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "unique identifier")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public POPCharge href(URI href) {
    
    this.href = href;
    return this;
  }

   /**
   * Hyperlink reference
   * @return href
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Hyperlink reference")

  public URI getHref() {
    return href;
  }


  public void setHref(URI href) {
    this.href = href;
  }


  public POPCharge description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of the productOfferingPrice
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of the productOfferingPrice")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public POPCharge lastUpdate(OffsetDateTime lastUpdate) {
    
    this.lastUpdate = lastUpdate;
    return this;
  }

   /**
   * the last update time of this ProductOfferingPrice
   * @return lastUpdate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the last update time of this ProductOfferingPrice")

  public OffsetDateTime getLastUpdate() {
    return lastUpdate;
  }


  public void setLastUpdate(OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
  }


  public POPCharge lifecycleStatus(String lifecycleStatus) {
    
    this.lifecycleStatus = lifecycleStatus;
    return this;
  }

   /**
   * the lifecycle status of this ProductOfferingPrice
   * @return lifecycleStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the lifecycle status of this ProductOfferingPrice")

  public String getLifecycleStatus() {
    return lifecycleStatus;
  }


  public void setLifecycleStatus(String lifecycleStatus) {
    this.lifecycleStatus = lifecycleStatus;
  }


  public POPCharge name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the productOfferingPrice
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the productOfferingPrice")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public POPCharge priceType(String priceType) {
    
    this.priceType = priceType;
    return this;
  }

   /**
   * A category that describes the price charge, such as recurring, penalty, One time fee and so forth.
   * @return priceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A category that describes the price charge, such as recurring, penalty, One time fee and so forth.")

  public String getPriceType() {
    return priceType;
  }


  public void setPriceType(String priceType) {
    this.priceType = priceType;
  }


  public POPCharge recurringChargePeriod(String recurringChargePeriod) {
    
    this.recurringChargePeriod = recurringChargePeriod;
    return this;
  }

   /**
   * The period type to repeat the application of the price Could be month, week...
   * @return recurringChargePeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The period type to repeat the application of the price Could be month, week...")

  public String getRecurringChargePeriod() {
    return recurringChargePeriod;
  }


  public void setRecurringChargePeriod(String recurringChargePeriod) {
    this.recurringChargePeriod = recurringChargePeriod;
  }


  public POPCharge recurringChargePeriodLength(Integer recurringChargePeriodLength) {
    
    this.recurringChargePeriodLength = recurringChargePeriodLength;
    return this;
  }

   /**
   * the period of the recurring charge:  1, 2, ... .It sets to zero if it is not applicable
   * @return recurringChargePeriodLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "the period of the recurring charge:  1, 2, ... .It sets to zero if it is not applicable")

  public Integer getRecurringChargePeriodLength() {
    return recurringChargePeriodLength;
  }


  public void setRecurringChargePeriodLength(Integer recurringChargePeriodLength) {
    this.recurringChargePeriodLength = recurringChargePeriodLength;
  }


  public POPCharge version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * ProductOffering version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ProductOffering version")

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public POPCharge constraint(List<ConstraintRef> constraint) {
    
    this.constraint = constraint;
    return this;
  }

  public POPCharge addConstraintItem(ConstraintRef constraintItem) {
    if (this.constraint == null) {
      this.constraint = new ArrayList<ConstraintRef>();
    }
    this.constraint.add(constraintItem);
    return this;
  }

   /**
   * The Constraint resource represents a policy/rule applied to ProductOfferingPrice.
   * @return constraint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Constraint resource represents a policy/rule applied to ProductOfferingPrice.")

  public List<ConstraintRef> getConstraint() {
    return constraint;
  }


  public void setConstraint(List<ConstraintRef> constraint) {
    this.constraint = constraint;
  }


  public POPCharge price(ProductPriceValue price) {
    
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProductPriceValue getPrice() {
    return price;
  }


  public void setPrice(ProductPriceValue price) {
    this.price = price;
  }


  public POPCharge priceAlteration(List<POPAlteration> priceAlteration) {
    
    this.priceAlteration = priceAlteration;
    return this;
  }

  public POPCharge addPriceAlterationItem(POPAlteration priceAlterationItem) {
    if (this.priceAlteration == null) {
      this.priceAlteration = new ArrayList<POPAlteration>();
    }
    this.priceAlteration.add(priceAlterationItem);
    return this;
  }

   /**
   * Get priceAlteration
   * @return priceAlteration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<POPAlteration> getPriceAlteration() {
    return priceAlteration;
  }


  public void setPriceAlteration(List<POPAlteration> priceAlteration) {
    this.priceAlteration = priceAlteration;
  }


  public POPCharge unitOfMeasure(Quantity unitOfMeasure) {
    
    this.unitOfMeasure = unitOfMeasure;
    return this;
  }

   /**
   * Get unitOfMeasure
   * @return unitOfMeasure
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Quantity getUnitOfMeasure() {
    return unitOfMeasure;
  }


  public void setUnitOfMeasure(Quantity unitOfMeasure) {
    this.unitOfMeasure = unitOfMeasure;
  }


  public POPCharge validFor(TimePeriod validFor) {
    
    this.validFor = validFor;
    return this;
  }

   /**
   * Get validFor
   * @return validFor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TimePeriod getValidFor() {
    return validFor;
  }


  public void setValidFor(TimePeriod validFor) {
    this.validFor = validFor;
  }


  public POPCharge atBaseType(String atBaseType) {
    
    this.atBaseType = atBaseType;
    return this;
  }

   /**
   * When sub-classing, this defines the super-class
   * @return atBaseType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When sub-classing, this defines the super-class")

  public String getAtBaseType() {
    return atBaseType;
  }


  public void setAtBaseType(String atBaseType) {
    this.atBaseType = atBaseType;
  }


  public POPCharge atSchemaLocation(URI atSchemaLocation) {
    
    this.atSchemaLocation = atSchemaLocation;
    return this;
  }

   /**
   * A URI to a JSON-Schema file that defines additional attributes and relationships
   * @return atSchemaLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A URI to a JSON-Schema file that defines additional attributes and relationships")

  public URI getAtSchemaLocation() {
    return atSchemaLocation;
  }


  public void setAtSchemaLocation(URI atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
  }


  public POPCharge atType(String atType) {
    
    this.atType = atType;
    return this;
  }

   /**
   * When sub-classing, this defines the sub-class Extensible name
   * @return atType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When sub-classing, this defines the sub-class Extensible name")

  public String getAtType() {
    return atType;
  }


  public void setAtType(String atType) {
    this.atType = atType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    POPCharge poPCharge = (POPCharge) o;
    return Objects.equals(this.id, poPCharge.id) &&
        Objects.equals(this.href, poPCharge.href) &&
        Objects.equals(this.description, poPCharge.description) &&
        Objects.equals(this.lastUpdate, poPCharge.lastUpdate) &&
        Objects.equals(this.lifecycleStatus, poPCharge.lifecycleStatus) &&
        Objects.equals(this.name, poPCharge.name) &&
        Objects.equals(this.priceType, poPCharge.priceType) &&
        Objects.equals(this.recurringChargePeriod, poPCharge.recurringChargePeriod) &&
        Objects.equals(this.recurringChargePeriodLength, poPCharge.recurringChargePeriodLength) &&
        Objects.equals(this.version, poPCharge.version) &&
        Objects.equals(this.constraint, poPCharge.constraint) &&
        Objects.equals(this.price, poPCharge.price) &&
        Objects.equals(this.priceAlteration, poPCharge.priceAlteration) &&
        Objects.equals(this.unitOfMeasure, poPCharge.unitOfMeasure) &&
        Objects.equals(this.validFor, poPCharge.validFor) &&
        Objects.equals(this.atBaseType, poPCharge.atBaseType) &&
        Objects.equals(this.atSchemaLocation, poPCharge.atSchemaLocation) &&
        Objects.equals(this.atType, poPCharge.atType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, href, description, lastUpdate, lifecycleStatus, name, priceType, recurringChargePeriod, recurringChargePeriodLength, version, constraint, price, priceAlteration, unitOfMeasure, validFor, atBaseType, atSchemaLocation, atType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class POPCharge {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    lastUpdate: ").append(toIndentedString(lastUpdate)).append("\n");
    sb.append("    lifecycleStatus: ").append(toIndentedString(lifecycleStatus)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    priceType: ").append(toIndentedString(priceType)).append("\n");
    sb.append("    recurringChargePeriod: ").append(toIndentedString(recurringChargePeriod)).append("\n");
    sb.append("    recurringChargePeriodLength: ").append(toIndentedString(recurringChargePeriodLength)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    constraint: ").append(toIndentedString(constraint)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceAlteration: ").append(toIndentedString(priceAlteration)).append("\n");
    sb.append("    unitOfMeasure: ").append(toIndentedString(unitOfMeasure)).append("\n");
    sb.append("    validFor: ").append(toIndentedString(validFor)).append("\n");
    sb.append("    atBaseType: ").append(toIndentedString(atBaseType)).append("\n");
    sb.append("    atSchemaLocation: ").append(toIndentedString(atSchemaLocation)).append("\n");
    sb.append("    atType: ").append(toIndentedString(atType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

