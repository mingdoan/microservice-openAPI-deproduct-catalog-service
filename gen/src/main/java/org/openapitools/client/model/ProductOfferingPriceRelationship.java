/*
 * Product Catalog Management
 * ## TMF API Reference: TMF620 - Product Catalog Management  ### Release : 20.5 - March 2021  Product Catalog API is one of Catalog Management API Family. Product Catalog API goal is to provide a catalog of products.   ### Operations Product Catalog API performs the following operations on the resources : - Retrieve an entity or a collection of entities depending on filter criteria - Partial update of an entity (including updating rules) - Create an entity (including default values and creation rules) - Delete an entity - Manage notification of events
 *
 * The version of the OpenAPI document: 4.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;

/**
 * Describes a non-composite relationship between product offering prices. For example one price might be an discount alteration for another price.
 */
@ApiModel(description = "Describes a non-composite relationship between product offering prices. For example one price might be an discount alteration for another price.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-04T02:31:04.425344+07:00[Asia/Ho_Chi_Minh]")
public class ProductOfferingPriceRelationship {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_HREF = "href";
  @SerializedName(SERIALIZED_NAME_HREF)
  private URI href;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RELATIONSHIP_TYPE = "relationshipType";
  @SerializedName(SERIALIZED_NAME_RELATIONSHIP_TYPE)
  private String relationshipType;

  public static final String SERIALIZED_NAME_ROLE = "role";
  @SerializedName(SERIALIZED_NAME_ROLE)
  private String role;

  public static final String SERIALIZED_NAME_AT_BASE_TYPE = "@baseType";
  @SerializedName(SERIALIZED_NAME_AT_BASE_TYPE)
  private String atBaseType;

  public static final String SERIALIZED_NAME_AT_SCHEMA_LOCATION = "@schemaLocation";
  @SerializedName(SERIALIZED_NAME_AT_SCHEMA_LOCATION)
  private URI atSchemaLocation;

  public static final String SERIALIZED_NAME_AT_TYPE = "@type";
  @SerializedName(SERIALIZED_NAME_AT_TYPE)
  private String atType;

  public static final String SERIALIZED_NAME_AT_REFERRED_TYPE = "@referredType";
  @SerializedName(SERIALIZED_NAME_AT_REFERRED_TYPE)
  private String atReferredType;


  public ProductOfferingPriceRelationship id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * unique identifier
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "unique identifier")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ProductOfferingPriceRelationship href(URI href) {
    
    this.href = href;
    return this;
  }

   /**
   * Hyperlink reference
   * @return href
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Hyperlink reference")

  public URI getHref() {
    return href;
  }


  public void setHref(URI href) {
    this.href = href;
  }


  public ProductOfferingPriceRelationship name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the related entity.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the related entity.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ProductOfferingPriceRelationship relationshipType(String relationshipType) {
    
    this.relationshipType = relationshipType;
    return this;
  }

   /**
   * type of the relationship, for example override, discount, etc.
   * @return relationshipType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "type of the relationship, for example override, discount, etc.")

  public String getRelationshipType() {
    return relationshipType;
  }


  public void setRelationshipType(String relationshipType) {
    this.relationshipType = relationshipType;
  }


  public ProductOfferingPriceRelationship role(String role) {
    
    this.role = role;
    return this;
  }

   /**
   * The association role for the source product offering price
   * @return role
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The association role for the source product offering price")

  public String getRole() {
    return role;
  }


  public void setRole(String role) {
    this.role = role;
  }


  public ProductOfferingPriceRelationship atBaseType(String atBaseType) {
    
    this.atBaseType = atBaseType;
    return this;
  }

   /**
   * When sub-classing, this defines the super-class
   * @return atBaseType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When sub-classing, this defines the super-class")

  public String getAtBaseType() {
    return atBaseType;
  }


  public void setAtBaseType(String atBaseType) {
    this.atBaseType = atBaseType;
  }


  public ProductOfferingPriceRelationship atSchemaLocation(URI atSchemaLocation) {
    
    this.atSchemaLocation = atSchemaLocation;
    return this;
  }

   /**
   * A URI to a JSON-Schema file that defines additional attributes and relationships
   * @return atSchemaLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A URI to a JSON-Schema file that defines additional attributes and relationships")

  public URI getAtSchemaLocation() {
    return atSchemaLocation;
  }


  public void setAtSchemaLocation(URI atSchemaLocation) {
    this.atSchemaLocation = atSchemaLocation;
  }


  public ProductOfferingPriceRelationship atType(String atType) {
    
    this.atType = atType;
    return this;
  }

   /**
   * When sub-classing, this defines the sub-class Extensible name
   * @return atType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When sub-classing, this defines the sub-class Extensible name")

  public String getAtType() {
    return atType;
  }


  public void setAtType(String atType) {
    this.atType = atType;
  }


  public ProductOfferingPriceRelationship atReferredType(String atReferredType) {
    
    this.atReferredType = atReferredType;
    return this;
  }

   /**
   * The actual type of the target instance when needed for disambiguation.
   * @return atReferredType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The actual type of the target instance when needed for disambiguation.")

  public String getAtReferredType() {
    return atReferredType;
  }


  public void setAtReferredType(String atReferredType) {
    this.atReferredType = atReferredType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductOfferingPriceRelationship productOfferingPriceRelationship = (ProductOfferingPriceRelationship) o;
    return Objects.equals(this.id, productOfferingPriceRelationship.id) &&
        Objects.equals(this.href, productOfferingPriceRelationship.href) &&
        Objects.equals(this.name, productOfferingPriceRelationship.name) &&
        Objects.equals(this.relationshipType, productOfferingPriceRelationship.relationshipType) &&
        Objects.equals(this.role, productOfferingPriceRelationship.role) &&
        Objects.equals(this.atBaseType, productOfferingPriceRelationship.atBaseType) &&
        Objects.equals(this.atSchemaLocation, productOfferingPriceRelationship.atSchemaLocation) &&
        Objects.equals(this.atType, productOfferingPriceRelationship.atType) &&
        Objects.equals(this.atReferredType, productOfferingPriceRelationship.atReferredType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, href, name, relationshipType, role, atBaseType, atSchemaLocation, atType, atReferredType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductOfferingPriceRelationship {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    relationshipType: ").append(toIndentedString(relationshipType)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    atBaseType: ").append(toIndentedString(atBaseType)).append("\n");
    sb.append("    atSchemaLocation: ").append(toIndentedString(atSchemaLocation)).append("\n");
    sb.append("    atType: ").append(toIndentedString(atType)).append("\n");
    sb.append("    atReferredType: ").append(toIndentedString(atReferredType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

